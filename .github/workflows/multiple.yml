name: Build Multiple Static Portal

on:
  workflow_dispatch:
    inputs:
      portalName:
        description: 'Optional: Select a specific portal to build'
        required: false
        default: ''
        type: choice
        options:
          - ''
          - admin
          - user

jobs:
  build-and-upload:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v1

      - name: Determine build files
        id: detect
        run: |
          set -e
          input="${{ github.event.inputs.portalName }}"
          echo "Selected input: '$input'"

          files=()

          if [[ -n "$input" ]]; then
            candidate="${input}-APIMATIC-BUILD.json"
            if [[ -f "$candidate" ]]; then
              files+=("$candidate")
            else
              echo "‚ùå File not found: $candidate"
              exit 1
            fi
          elif [[ -f "APIMATIC-BUILD.json" ]]; then
            files+=("APIMATIC-BUILD.json")
          else
            mapfile -t files < <(find . -maxdepth 1 -name '*-APIMATIC-BUILD.json' | sort)
            if [[ ${#files[@]} -eq 0 ]]; then
              echo "‚ùå No build files found."
              exit 1
            fi
          fi

          echo "Detected build files:"
          printf "%s\n" "${files[@]}"
          printf "%s\n" "${files[@]}" > build-list.txt

      - name: Build and upload portals
        run: |
          while read selected; do
            [ -z "$selected" ] && continue
            echo "üîß Building portal for: $selected"

            # Create clean working directory
            workdir=$(mktemp -d)
            cp "$selected" "$workdir/"
            cp -r $(find . -maxdepth 1 -type f ! -name '*-APIMATIC-BUILD.json') "$workdir/" 2>/dev/null || true

            # Create input.zip for APIMatic
            (cd "$workdir" && zip -qq -r input.zip .)

            # Call APIMatic build API
            curl -X POST \
              --url 'https://api.apimatic.io/portal' \
              -H 'Authorization:X-Auth-Key ${{ secrets.API_KEY }}' \
              -F "file=@$workdir/input.zip" \
              -o "$workdir/output.zip"

            # Rename output.zip for clarity
            name=$(basename "$selected" -APIMATIC-BUILD.json)
            [[ "$selected" == "APIMATIC-BUILD.json" ]] && name="default"

            final_name="${name}-portal.zip"
            mv "$workdir/output.zip" "$final_name"
            echo "‚úÖ Built portal: $final_name"

            rm -rf "$workdir"
          done < build-list.txt

      - name: Upload generated portal ZIPs
        uses: actions/upload-artifact@v4
        with:
          name: portals
          path: '*-portal.zip'
